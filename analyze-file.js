const fs = require('fs');

// –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
const content = fs.readFileSync('paste.txt', 'utf8');

console.log('üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:', content.length, '—Å–∏–º–≤–æ–ª–æ–≤');
console.log('üìÑ –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:');
console.log(content.substring(0, 500));
console.log('\n---\n');

// –ò—â–µ–º –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è "institution":{"id":
const idMatches = content.match(/"institution":\{"id":\d+/g);
if (idMatches) {
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É "institution":{"id":', idMatches.length);
    console.log('üìã –ü–µ—Ä–≤—ã–µ 5 ID:');
    idMatches.slice(0, 5).forEach(match => {
        const id = match.match(/\d+/)[0];
        console.log('  - ID:', id);
    });
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
const altMatches = content.match(/\{"institution":\{/g);
if (altMatches) {
    console.log('\nüîç –ù–∞–π–¥–µ–Ω–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π {"institution":{:', altMatches.length);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
console.log('\nüìä –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:');
const lines = content.split('\n');
console.log('üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:', lines.length);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
if (lines[0]) {
    console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏:');
    console.log('–î–ª–∏–Ω–∞:', lines[0].length);
    console.log('–ù–∞—á–∞–ª–æ:', lines[0].substring(0, 100));
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü –ø–µ—Ä–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    let depth = 0;
    let inString = false;
    let escape = false;
    
    for (let i = 0; i < lines[0].length && i < 5000; i++) {
        const char = lines[0][i];
        
        if (!escape) {
            if (char === '"' && !inString) inString = true;
            else if (char === '"' && inString) inString = false;
            else if (!inString) {
                if (char === '{') depth++;
                else if (char === '}') {
                    depth--;
                    if (depth === 0) {
                        console.log('üéØ –ü–µ—Ä–≤—ã–π –ø–æ–ª–Ω—ã–π JSON –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏:', i);
                        console.log('üìã –ö–æ–Ω–µ—Ü –ø–µ—Ä–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞:', lines[0].substring(i-20, i+1));
                        break;
                    }
                }
            }
            escape = (char === '\\');
        } else {
            escape = false;
        }
    }
}
