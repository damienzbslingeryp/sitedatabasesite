const mongoose = require('mongoose');

// MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
const MONGODB_URI = 'mongodb://localhost:27017/site-manager';

// –°—Ö–µ–º–∞ —Å–∞–π—Ç–∞
const siteSchema = new mongoose.Schema({
    siteId: { type: Number, required: true, unique: true },
    name: { type: String, required: true },
    url: { type: String, default: '' },
    status: { 
        type: String, 
        enum: ['general', '2fa', 'good', 'archive'],
        default: 'general' 
    },
    comment: { type: String, default: '' },
    prefix: { type: String, default: '' },
    credentials: {
        login: { type: String, default: '' },
        password: { type: String, default: '' }
    },
    dateAdded: { type: Date, default: Date.now },
    lastModified: { type: Date, default: Date.now },
    modifiedBy: { type: String, default: 'system' }
});

const Site = mongoose.model('Site', siteSchema);

async function createIndexes() {
    try {
        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
        await mongoose.connect(MONGODB_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true
        });
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        console.log('üî® –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...');
        
        // –ò–Ω–¥–µ–∫—Å –ø–æ —Å—Ç–∞—Ç—É—Å—É (–¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤–∫–ª–∞–¥–∫–∞–º)
        await Site.collection.createIndex({ status: 1 });
        console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ —Å—Ç–∞—Ç—É—Å—É —Å–æ–∑–¥–∞–Ω');
        
        // –ò–Ω–¥–µ–∫—Å –ø–æ siteId —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–∑-–∑–∞ unique: true –≤ —Å—Ö–µ–º–µ
        console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ siteId —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (unique)');
        
        // –°–æ—Å—Ç–∞–≤–Ω–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
        await Site.collection.createIndex({ name: 'text', url: 'text' });
        console.log('‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω');
        
        // –ò–Ω–¥–µ–∫—Å –ø–æ –¥–∞—Ç–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        await Site.collection.createIndex({ dateAdded: -1 });
        console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω');
        
        // –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        await Site.collection.createIndex({ status: 1, dateAdded: -1 });
        console.log('‚úÖ –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∏–Ω–¥–µ–∫—Å—ã
        const indexes = await Site.collection.getIndexes();
        console.log('\nüìä –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã:');
        Object.keys(indexes).forEach(key => {
            console.log(`   - ${key}`);
        });
        
        console.log('\n‚úÖ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
        process.exit(0);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
createIndexes();